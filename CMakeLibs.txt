# -*- mode: cmake; -*-
# - osquery macro definitions
#
# Remove boilerplate code for linking the osquery core dependent libs
# compiling and handling static or dynamic (run time load) libs.

# osquery-specific helper macros
macro(SET_OSQUERY_COMPILE TARGET)
  set_target_properties(${TARGET} PROPERTIES COMPILE_FLAGS ${OS_COMPILE_FLAGS})
  set(OPTIONAL_FLAGS ${ARGN})
  list(LENGTH OPTIONAL_FLAGS NUM_OPTIONAL_FLAGS)
  if(${NUM_OPTIONAL_FLAGS} GREATER 0)
    set_target_properties(${TARGET} PROPERTIES COMPILE_FLAGS ${OPTIONAL_FLAGS})
  endif()
endmacro(SET_OSQUERY_COMPILE)

macro(ADD_OSQUERY_TEST TEST_NAME SOURCE)
  if(NOT DEFINED ENV{SKIP_TESTS})
    add_executable(${TEST_NAME} ${SOURCE})
    TARGET_OSQUERY_LINK_WHOLE(${TEST_NAME} libosquery_basic)
    target_link_libraries(${TEST_NAME} libosquery_additional)
    target_link_libraries(${TEST_NAME} gtest)
    target_link_libraries(${TEST_NAME} glog)
    set(OPTIONAL_FLAGS ${ARGN})
    SET_OSQUERY_COMPILE(${TEST_NAME} "${OPTIONAL_FLAGS}")
    add_test(${TEST_NAME} ${TEST_NAME})
  endif()
endmacro(ADD_OSQUERY_TEST)

# Core/non core link helping macros (tell the build to link ALL).
macro(ADD_OSQUERY_LINK LINK)
  list(APPEND OSQUERY_ADDITIONAL_LINKS ${LINK})
  set(OSQUERY_ADDITIONAL_LINKS ${OSQUERY_ADDITIONAL_LINKS} PARENT_SCOPE)
endmacro(ADD_OSQUERY_LINK)

macro(ADD_OSQUERY_CORE_LINK LINK)
  list(APPEND OSQUERY_LINKS ${LINK})
  set(OSQUERY_LINKS ${OSQUERY_LINKS} PARENT_SCOPE)
endmacro(ADD_OSQUERY_CORE_LINK)

# Core/non core lists of target source files.
macro(ADD_OSQUERY_LIBRARY TARGET)
  add_library(${TARGET} OBJECT ${ARGN})
  SET_OSQUERY_COMPILE(${TARGET})
  list(APPEND OSQUERY_ADDITIONAL_SOURCES $<TARGET_OBJECTS:${TARGET}>)
  set(OSQUERY_ADDITIONAL_SOURCES ${OSQUERY_ADDITIONAL_SOURCES} PARENT_SCOPE)
endmacro(ADD_OSQUERY_LIBRARY TARGET)

macro(ADD_OSQUERY_CORE_LIBRARY TARGET)
  add_library(${TARGET} OBJECT ${ARGN})
  SET_OSQUERY_COMPILE(${TARGET})
  list(APPEND OSQUERY_SOURCES $<TARGET_OBJECTS:${TARGET}>)
  set(OSQUERY_SOURCES ${OSQUERY_SOURCES} PARENT_SCOPE)
endmacro(ADD_OSQUERY_CORE_LIBRARY TARGET)

# Core/non core lists of target source files compiled as ObjC++.
macro(ADD_OSQUERY_OBJCXX_LIBRARY TARGET)
  add_library(${TARGET} OBJECT ${ARGN})
  SET_OSQUERY_COMPILE(${TARGET} "${OBJCXX_COMPILE_FLAGS}")
  list(APPEND OSQUERY_ADDITIONAL_SOURCES $<TARGET_OBJECTS:${TARGET}>)
  set(OSQUERY_ADDITIONAL_SOURCES ${OSQUERY_SOURCES} PARENT_SCOPE)
endmacro(ADD_OSQUERY_OBJCXX_LIBRARY TARGET)

macro(ADD_OSQUERY_CORE_OBJCXX_LIBRARY TARGET)
  add_library(${TARGET} OBJECT ${ARGN})
  SET_OSQUERY_COMPILE(${TARGET} "${OBJCXX_COMPILE_FLAGS}")
  list(APPEND OSQUERY_SOURCES $<TARGET_OBJECTS:${TARGET}>)
  set(OSQUERY_SOURCES ${OSQUERY_SOURCES} PARENT_SCOPE)
endmacro(ADD_OSQUERY_CORE_OBJCXX_LIBRARY TARGET)

# Helper to abstract OS/Compiler whole linking.
macro(TARGET_OSQUERY_LINK_WHOLE TARGET OSQUERY_LIB)
  target_link_libraries(${TARGET} "${OS_WHOLELINK_PRE}")
  target_link_libraries(${TARGET} ${OSQUERY_LIB})
  target_link_libraries(${TARGET} "${OS_WHOLELINK_POST}")
endmacro(TARGET_OSQUERY_LINK_WHOLE)
